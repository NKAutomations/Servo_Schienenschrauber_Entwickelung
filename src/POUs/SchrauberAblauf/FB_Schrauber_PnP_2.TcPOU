<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="FB_Schrauber_PnP_2" Id="{ebbc5fcc-e84b-436f-a865-5531a3e18bea}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Schrauber_PnP_2
// Version history:	
// 
// Bei Autoquit wird einmalig nach Zeit > T#0ms quittiert.
// Erst wieder nach erfolgreicher Bearbeitung kann ein Autoquit wieder aktiv werden.
// ( Vermeiden von Endlosschleifen von Fehlern )
// 
// Date          | Version    | created under        | Author          | Remark 
// ---------------------------------------------------------------------------------------- 
// ....          | ...        | ...                  | ...             | ...


VAR_INPUT
	
	I_bResetTeststation				: BOOL;		(* Hinzugefügt für Testaufbau im Steuerungstechniker Büro um den Baustein zu Quittieren !!*)
	
	I_bTaktFrg						: BOOL;
	I_bTaktStop						: BOOL;
	I_bAuto							: BOOL;
	I_bHand							: BOOL;
	I_bQuittFehler					: BOOL;
	I_bGrundstellung				: BOOL;
	I_bSchutzbereichOK			: BOOL;

	I_sSourceBeschreibung		: STRING;
	I_sPosBeschreibung			: STRING := 'Schrauber';

	I_bTaktStart					: BOOL;	(*Start Schienenschrauben*)
	I_bTaktStartHalb				: BOOL;	(*Start Schraube halb rein für z.B. Metalltravere*)

	I_bGrdstlgSchrEinh			: BOOL;
	I_bZustellZylAusgef			: BOOL;

	I_fSchraubTiefeAuswurf		: LREAL;

	I_fTiefentoleranzPositiv	: LREAL:=1;	(* Z.B. 3 bedeutet, dass von Solltiefe bis + 3mm wir im Ziel liegen *)
	I_fTiefentoleranzNegativ	: LREAL:=0.5;	(* Z.B. 3 bedeutet, dass von Solltiefe bis - 3mm wir im Ziel liegen *)
	I_nAchsId						: INT;
	I_nEncId							: INT;

	I_stParam						: ST_ParamSKSServoschrauber;

	I_tAutoQuit					: TIME :=T#0MS; (*default nicht aktiv -> 0ms *)
	
	I_bSchraubeNachschiessen	: BOOL;
	I_bReferenzfahrtAktiv		: BOOL;

	I_bFreigabeAuswerfen			: BOOL;
	
	I_sDateipfad					: STRING;
	I_bSchrauberLogOn				: BOOL;	// Umbennen in I_bSchrauberAbwahl

	I_nMotorHersteller			: INT; //0: BRC; 1: Beckhoff
	
	//Umbau Weber --> Boellhoff-/Huettenhoelscherschrauber
	I_bHuettenSchr					: BOOL := FALSE;

END_VAR

VAR_OUTPUT
	Q_bBusy						: BOOL;
	Q_bDone						: BOOL;
	Q_bError						: BOOL;

	Q_sPosZustand				: STRING := '';
	Q_bGrundstellungAktiv	: BOOL;
	Q_bGrundstellungOk		: BOOL;

	Q_bSchraubHub				: BOOL;
	Q_bSchrAuswurf				: BOOL;
	Q_bSchrHalt					: BOOL;
	Q_nTorque					: INT:=300;
	Q_bAxisReset				: BOOL;
	Q_nErrorId					: INT;
	Q_bDrehmomentFehler		: BOOL;
	Q_bTuerFreigabe			: BOOL;
	
	Q_nStep						: INT;
	Q_strStep					: STRING;
	
	Q_bModuloBetrArt			: BOOL;

	Q_sStatus					: STRING(255);	//Informationen zu dem aktuellen Ablaufschritt
END_VAR
VAR_IN_OUT
	IQ_fbObjSchlauch			: FB_Obj_IOSchlauch;				// Schlauch
	
	IQ_stMeldung				: ST_MeldServoSchrauber_1;		// Meldung

END_VAR
VAR
	objError_Schrauber		: FB_Obj_Error_Schrauber;

	bSchrAuswurfStart			: BOOL;
	bSchraubHub					: BOOL;
	bSchrAuswurf				: BOOL;
	
	bModuloBetrArt				: BOOL;
	
	fSchraubTiefeIst			: LREAL;
	arrDrehmomentIst			: ARRAY [0..10] OF LREAL;
	fDrehmomentIstMittel		: LREAL;
	tonAnlauf					: TON;
	tonStillstandAchse		: TON;
	tonStillstandVorschub	: TON;
	tonStillstVorschubDelay	: TON;
	fIstPosAchseAlt			: LREAL;
	fIstPosVorschubAlt		: LREAL;
	bStillstandAchse			: BOOL;
	bStillstandVorschub		: BOOL;
	nFehlerSchrittMerker		: INT;
	nFehlerZaehler				: INT;
	tonVerzStillstand			: TON;
	fReduzGeschwFaktor		: LREAL:= 0.025;	(* Reduzierter Geschwindigkeitsfaktur *)

	rtrigReset					: R_TRIG;
	bReset						: BOOL;
	bAchsreset					: BOOL;

	bAutoquitAktiv				: BOOL;
	tonAutoquit					: TON;
	tonTimeOver1				: TON;

	idx							: INT;

(* Schrittkette Grund*)
	nStepGrund  				: INT;
	nOldStepGrund				: INT;
	tonTimeOverGrund			: TON;

(* Schrittkette Auto*)
	nStep  						: INT;
	sStep							: STRING;
	nOldStep						: INT;
	tonDelay1					: TON;
	
	tonSchraubtakt				: TON;
	timeSchraubtakt			: TIME;
	arrLetzteTiefe				: ARRAY[0..100] OF LREAL;
	arrLetzteFehler			: ARRAY[0..100] OF LREAL;
	arrLetzteMomente			: ARRAY[0..100] OF LREAL;
	arrLetzteSchraubzeit		: ARRAY[0..100] OF TIME;
	ftrigStep60					: F_TRIG;
	bSchraubtest				: BOOL;
	nTestmoment					: UINT:=320;

	tonTimeOutSchrauber				: TON;
	nAnzahlSchraubspitzenKlemmer	: DINT;
	tonNotPosiFrg: TON;
	rtrigStep70: R_TRIG;
	ftrigStep70: F_TRIG;
	rtrigStepError: R_TRIG;
	
	fbMittelwert			: FB_Mittelwert;
	
	
	fSchraubTiefeIstTest				: LREAL;
	nTiefeBeimAufsetzen				: LREAL;
	bTiefeBeimAufsetzenOK			: BOOL;

	//Log
	fbStepHistory						: FB_StepHistory;

	fbLogToFile							: FB_LogFile_Schrauber;
	rtrigStueckzaehler				: R_TRIG;
	nStueckzaehler						: INT;
	rtrigSchrauberfehler				: R_TRIG;
	nTestStep1: INT;
	nTestStep2: INT;
	nTestStep3: INT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[	(* Reset *)
	rtrigReset(
		CLK:=IQ_fbObjSchlauch.I_bTasteNachruetteln);
		
	bReset:=rtrigReset.Q
			AND NOT (nStep = 10 OR nStep = 90)
			OR I_bResetTeststation;(* Hinzugefügt für Testaufbau im Steuerungstechniker Büro um den Baustein zu Quittieren !!*)

	a_Ablauf();
	e_Error();
	l_Log();
	o_Output();


	fReduzGeschwFaktor		:= 0.005;	(* Reduzierter Geschwindigkeitsfaktur *)
	]]></ST>
    </Implementation>
    <Action Name="a_Ablauf" Id="{e86c71ea-c2a1-43e9-9f0f-5fd8c403f2ad}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
    <Action Name="e_Error" Id="{1d9a7141-fbd7-49da-872f-7f83fabd7b4f}">
      <Implementation>
        <ST><![CDATA[	(* Fehler überarbeitet *)

	(* Fehler Nachladen, Schraube fehlt *)
	objError_Schrauber.I_fbFehlerNachladen(
		I_bAktiv := (nStep = -40) 
						);
	(* Langsame Geschwindigkeit wird nicht erreicht *)
	objError_Schrauber.I_fbFehlerLangsameGeschwindigkeit(
		I_bAktiv := (nStep = -45) 
						);
	(* Schraubtiefe für Solldrehzahl wird nicht erreicht *)
	objError_Schrauber.I_fbFehlerTiefeSolldrehzahl(
		I_bAktiv := (nStep = -50) 
						);
	(* Tiefe nicht erreicht *)
	objError_Schrauber.I_fbFehler_Tiefe(
		I_bAktiv := (nStep = -60)
						);						
	(* Tiefe überschritten *)
	objError_Schrauber.I_fbFehler_TiefeUeberschritten(
		I_bAktiv := (nStep = -61)
						);
	(* Drehmoment nicht erreicht*)
	objError_Schrauber.I_fbFehler_Sollmoment(
		I_bAktiv := (nStep = -65)
						);
	(* Fehler beim heben/senken der Schrauberstange*)
	objError_Schrauber.I_fbFehler_Schrauberstange(
		I_bAktiv := (nStep = -80)
						);
	(* Fehler beim Auswerfen *)
	objError_Schrauber.I_fbFehlerAuswurf(
		I_bAktiv := (nStep = -210)
						);
	(* Fehler allgemein *)
	Q_bError	:= nStep<0
					AND NOT I_bSchrauberLogOn;
	
	
	IQ_stMeldung.bMeldFehlNachladen  					:= objError_Schrauber.I_fbFehlerNachladen.I_bAktiv
																		AND NOT I_bSchrauberLogOn;
	IQ_stMeldung.bMeldFehlLangsameGeschwindigkeit	:= objError_Schrauber.I_fbFehlerLangsameGeschwindigkeit.I_bAktiv
																		AND NOT I_bSchrauberLogOn;
	IQ_stMeldung.bMeldFehlTiefeSolldrehzahl			:= objError_Schrauber.I_fbFehlerTiefeSolldrehzahl.I_bAktiv
																		AND NOT I_bSchrauberLogOn;
	IQ_stMeldung.bMeldFehlSollTiefe						:= objError_Schrauber.I_fbFehler_Tiefe.I_bAktiv
																		AND NOT I_bSchrauberLogOn;
	IQ_stMeldung.bMeldFehlSollTiefeUebers				:= objError_Schrauber.I_fbFehler_TiefeUeberschritten.I_bAktiv
																		AND NOT I_bSchrauberLogOn;
	IQ_stMeldung.bMeldFehlSollDrehmom					:= objError_Schrauber.I_fbFehler_Sollmoment.I_bAktiv
																		AND NOT I_bSchrauberLogOn;
	IQ_stMeldung.bMeldFehlSchrauberstange				:= objError_Schrauber.I_fbFehler_Schrauberstange.I_bAktiv
																		AND NOT I_bSchrauberLogOn;
	IQ_stMeldung.bMeldFehlAuswerfen						:= objError_Schrauber.I_fbFehlerAuswurf.I_bAktiv
																		AND NOT I_bSchrauberLogOn;

	IQ_stMeldung.sName 		:= I_sPosBeschreibung;
	IQ_stMeldung.SourceName := I_sSourceBeschreibung;
	]]></ST>
      </Implementation>
    </Action>
    <Action Name="l_Log" Id="{1d7b5699-fd68-49ef-91d6-31ffb1b4784e}">
      <Implementation>
        <ST><![CDATA[	//Stückzähler
	rtrigStueckzaehler(clk:= Q_bDone);
	IF rtrigStueckzaehler.Q
	THEN
		nStueckzaehler := nStueckzaehler + 1;
	END_IF
		
	//Log
	rtrigSchrauberfehler(clk:= nStep < 0
										AND I_stParam.bLogAnwahl);
   
	fbLogToFile(
		I_bStart				:= rtrigSchrauberfehler.Q,
		I_sDateipfad		:= I_sDateipfad,
		I_sDateiname		:= I_sPosBeschreibung,
		I_sUeberschrift	:= 'Timestamp;Anzahl;Schraubzeit;Drehmoment;Schraubtiefe;Barcode;Fehlermeldung;$R',
		
		I_bFehler1			:= objError_Schrauber.I_fbFehler_Schrauberstange.I_bAktiv,
		I_bFehler2			:= objError_Schrauber.I_fbFehler_Sollmoment.I_bAktiv,
		I_bFehler3			:= objError_Schrauber.I_fbFehler_Tiefe.I_bAktiv,
		I_bFehler4			:= objError_Schrauber.I_fbFehler_TiefeUeberschritten.I_bAktiv,
		I_bFehler5			:= objError_Schrauber.I_fbFehlerAuswurf.I_bAktiv,
		I_bFehler6			:= objError_Schrauber.I_fbFehlerLangsameGeschwindigkeit.I_bAktiv,
		I_bFehler7			:= objError_Schrauber.I_fbFehlerNachladen.I_bAktiv,
		I_bFehler8			:= objError_Schrauber.I_fbFehlerTiefeSolldrehzahl.I_bAktiv,
	               	   
		I_sFehler1			:= 'Fehler beim heben/senken der Schrauberstange',
		I_sFehler2			:= 'Fehler - Drehmoment wird nicht erreicht',
		I_sFehler3			:= 'Fehler - Tiefe wird nicht erreicht',
		I_sFehler4			:= 'Fehler - Tiefe ueberschritten',
		I_sFehler5			:= 'Fehler - Auswerfen',
		I_sFehler6			:= 'Fehler - Langsame Geschwindigkeit wird nicht erreicht',
		I_sFehler7			:= 'Fehler - Schraube fehlt',
		I_sFehler8			:= 'Fehler - Schraubtiefe für Solldrehzahl wird nicht erreicht',
   
		I_sBarcode			:= '',
   
		I_nAnzahlVerschraubungen := nStueckzaehler,
   
		I_tSchraubzeit		:= arrLetzteSchraubzeit[0],
		I_fDrehmoment		:= arrLetzteMomente[0],
		I_fSchraubtiefe	:= arrLetzteTiefe[0],
   	);		
   
	IF Q_bDone
	THEN
		fbLogToFile( I_bStart:= FALSE);
	END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="o_Output" Id="{8e012737-d7b7-49ca-8168-99f0be229a6e}">
      <Implementation>
        <ST><![CDATA[	IQ_fbObjSchlauch.I_bSotiertopfEin :=
								I_bSchutzbereichOK AND NOT bReset
								AND (nStep = 11 OR nStep = 21);

	IQ_fbObjSchlauch.I_bFrgNachladen 	:=
								I_bSchutzbereichOK AND NOT bReset
								AND (nStep = 11);

	Q_bSchraubHub	:=		I_bSchutzbereichOK AND NOT bReset
								AND (bSchraubHub);

	Q_bSchrAuswurf	:=		I_bSchutzbereichOK AND NOT bReset
								AND (bSchrAuswurf);

	Q_bBusy			:= 	nStep <> 10 ;

	Q_bDone			:= 	nStep = 100 ;

	Q_bSchrHalt		:=		nStep = 70;			

	Q_bAxisReset	:=		bAchsreset ;

	Q_bTuerFreigabe:=
								nStep <= 10 ;
							
	Q_nStep 			:= 	nStep;
	Q_strStep		:= 	Q_strStep;
	
	Q_sStatus		:= Concat(INT_TO_STRING(nStep),CONCAT( ' - ', sStep));	

	(* ModuloBetrArt *)
	Q_bModuloBetrArt	:= bModuloBetrArt;

]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="FB_Schrauber_PnP_2">
      <LineId Id="220" Count="5" />
      <LineId Id="413" Count="0" />
      <LineId Id="226" Count="1" />
      <LineId Id="241" Count="1" />
      <LineId Id="229" Count="1" />
      <LineId Id="232" Count="2" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_2.a_Ablauf">
      <LineId Id="766" Count="0" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_2.e_Error">
      <LineId Id="2" Count="5" />
      <LineId Id="46" Count="7" />
      <LineId Id="9" Count="3" />
      <LineId Id="41" Count="3" />
      <LineId Id="54" Count="7" />
      <LineId Id="34" Count="5" />
      <LineId Id="84" Count="0" />
      <LineId Id="62" Count="1" />
      <LineId Id="65" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="91" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="81" Count="0" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_2.l_Log">
      <LineId Id="2" Count="4" />
      <LineId Id="1" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="9" Count="8" />
      <LineId Id="19" Count="4" />
      <LineId Id="63" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="67" Count="1" />
      <LineId Id="25" Count="4" />
      <LineId Id="69" Count="3" />
      <LineId Id="31" Count="5" />
      <LineId Id="73" Count="1" />
      <LineId Id="37" Count="0" />
      <LineId Id="39" Count="3" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_2.o_Output">
      <LineId Id="2" Count="19" />
      <LineId Id="24" Count="6" />
      <LineId Id="35" Count="1" />
      <LineId Id="31" Count="3" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>