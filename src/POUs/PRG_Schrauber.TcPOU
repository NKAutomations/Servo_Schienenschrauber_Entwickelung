<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="PRG_Schrauber" Id="{34a606c7-1c45-4e93-ba88-083be396186c}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_Schrauber
VAR
	fbSchrauber_PnP_Original	:FB_Schrauber_PnP;
	fbSchrauber_PnP_Entwickel_3	:FB_Schrauber_PnP_3;
	fbSchrauber_PnP_Entwickel_4	:FB_Schrauber_PnP_4;
	
	
	SetPosSchrauber				: MC_WriteParameter;
	ReadOffsetSchrauber			: MC_ReadParameter;
	
	
	nAchsId : INT;
	
	iAuswSchrauberMode	:INT := 0;	(* 0 = Original Ablauf | 1 = Versuch Ablauf *)
	iStepRef			:INT;
	
	nRefOffset			:LREAL := 0;
	nRefPosition		:LREAL := -2.5;	(* Fest Definiert *)
	nParamOffsetGeber	:LREAL ;
	
	
	bRefStart			:BOOL;
	bAchsenInit			:BOOL;
	
	bTaktStartMerker	:BOOL;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[ac01_AchsAnstrg();

ac01_Parameter();

IF Main.fbButtonBox.Q_stButtons[2].Q
THEN
	iAuswSchrauberMode := 0;
ELSIF
	Main.fbButtonBox.Q_stButtons[6].Q
THEN
	iAuswSchrauberMode := 1;
ELSIF
	Main.fbButtonBox.Q_stButtons[7].Q
THEN
	iAuswSchrauberMode := 4;
ELSIF
	Main.fbButtonBox.Q_stButtons[8].Q
THEN
	iAuswSchrauberMode := 5;
ELSIF
	Main.fbButtonBox.Q_stButtons[9].Q
THEN
	iAuswSchrauberMode := 6;
END_IF

CASE iAuswSchrauberMode OF
0:	ac00_Init();	(* Reset beide Abläufe *)
1:	ac10_OriginalSchrauberAblauf();
4:	ac12_EntwickelungSchrauberAblauf();
5:	ac20_SchrauberArbeitsstellung();
6:	ac02_TiefenSensorReferenz();
END_CASE

ac90_Status();


]]></ST>
    </Implementation>
    <Action Name="ac00_Init" Id="{33fc87e0-282b-4ce5-9207-c1d40d18faa3}">
      <Implementation>
        <ST><![CDATA[(* RESET *)
arrBetrartAutomAktiv[1] := FALSE;
arrAntrGruppeFrg[1] := FALSE;
arrAntrGruppeFrg[2] := FALSE;

bAchsenInit := TRUE;


fbSchrauber_PnP_Original(
	I_bResetTeststation := 			TRUE,
	IQ_fbObjSchlauch:= 				objSchlauch, 
	IQ_stMeldung:= 					stAchsMeldung);
	
fbSchrauber_PnP_Entwickel_3(
	I_bResetTeststation := 			TRUE,
	IQ_fbObjSchlauch:= 				objSchlauch, 
	IQ_stMeldung:= 					stAchsMeldung);
	
fbSchrauber_PnP_Entwickel_4(
	I_bResetTeststation := 			TRUE,
	IQ_fbObjSchlauch:= 				objSchlauch, 
	IQ_stMeldung:= 					stAchsMeldung);
	
bGVLVentil_1_Ausfahr:=		FALSE;
bGVLVentil_1_Einfahr:=		TRUE;

bGVLVentil_2_Ausfahr:=		TRUE;
bGVLVentil_2_Einfahr:=		FALSE;

bRefStart := FALSE;
iStepRef :=0;

bTaktStartMerker := FALSE;]]></ST>
      </Implementation>
    </Action>
    <Action Name="ac01_AchsAnstrg" Id="{c4e7976c-bebe-4a61-9af8-a1349e0cfa35}">
      <Implementation>
        <ST><![CDATA[
(*=============================================================================================*)
(* Achsanschaltung Global für alle Schrauberabläufe Gleich*)
(*=============================================================================================*)
arrBetrartAutomAktiv[1] := TRUE;
arrAntrGruppeFrg[1] := TRUE;
arrAntrGruppeFrg[2] := TRUE;

nAchsId	:= cAxis1261_Schrauber1;
	
(*=============================================================================================*)
(* NC Achse*)

IF	bAchsenInit 
THEN
	arrNcAchsen[cAxis1261_Schrauber1].stFreigb.bAntrbEinFrg				:= FALSE;
ELSE
	arrNcAchsen[cAxis1261_Schrauber1].stFreigb.bAntrbEinFrg				:= TRUE;
END_IF

arrNcAchsen[cAxis1261_Schrauber1].stStatus.bAchseBTB				:= TRUE;	(* Muss noch gemacht werden *)
arrNcAchsen[cAxis1261_Schrauber1].stFreigb.bVorschFrg				:= TRUE;
arrNcAchsen[cAxis1261_Schrauber1].stFreigb.bSensEndlNeg				:= TRUE;
arrNcAchsen[cAxis1261_Schrauber1].stFreigb.bSensEndlPos				:= TRUE;
arrNcAchsen[cAxis1261_Schrauber1].stEinAusG.I_nDigitaleEingaenge.3 	:= TRUE;
arrNcAchsen[cAxis1261_Schrauber1].stEinAusG.I_nDigitaleEingaenge.4	:= TRUE;
arrNcAchsen[cAxis1261_Schrauber1].stAuftrg.bPTP_verz				:= FALSE;
arrNcAchsen[cAxis1261_Schrauber1].stFreigb.fOverride				:= 10;
arrNcAchsen[cAxis1261_Schrauber1].stParam.fEilgGeschw				:= 13500;		(* Aus NC Achse *)

(*=============================================================================================*)	
(* Schraubmotor *)
arrAnstgSchrauberAchse[1](
		IQ_stAchse 			:= arrNcAchsen[cAxis1261_Schrauber1],
		IQ_fbAxisRef 		:= arrAxis[cAxis1261_Schrauber1],
		);
(*=============================================================================================*)			
(* Encoder*)									
arrAnstgSchrauberAchse[2](
		IQ_stAchse 			:= arrNcAchsen[cEnc03_Schrauber1],
		IQ_fbAxisRef 		:= arrAxis[cEnc03_Schrauber1],
		);
(*=============================================================================================*)			
(* Ohne Softwareendlagen *)
arrNcAchsen[cAxis1261_Schrauber1].stParam.bOhnSoftEndl:= TRUE;


]]></ST>
      </Implementation>
    </Action>
    <Action Name="ac01_Parameter" Id="{9bc1ce64-ec14-4eb1-a3e0-1e29082687c8}">
      <Implementation>
        <ST><![CDATA[(*=============================================================================================*)
(* Parameter *)
(* Formel zum berechnen der Echten Upm - (fEilgGeschw(13500) /100) *Solldrehzahl(%) /360 *60 *)

stParamSKSServoschrauber.fStartDrehzahl				:= 14;		(*315*)	(* Die Startdrehzahl wird beim Starten und beim Anhalten verwendet *) (* Original 10 // 225 uPm	bei fEilgGeschw	:= 13500; *)
stParamSKSServoschrauber.fParam_Solldrehzahl		:= 60;		(* 1350*)(* Original 40 // 900 uPm	bei fEilgGeschw	:= 13500; *)
stParamSKSServoschrauber.fParam_Sollmoment			:= 1.4;		(* 1.6 Solldrehmoment beim anziehen *)
stParamSKSServoschrauber.fParam_Sollschraubtiefe	:= -2;		(* Schrauber Tiele Soll  *)
stParamSKSServoschrauber.fParam_Umschalttiefe		:= 0.5;		(* Umschaltung auf Langsame Geschwindigkeit nachdem Schnell rein gefahren wurde *)
stParamSKSServoschrauber.tParam_ZeitdAuswurfSchr	:= T#2S;
stParamSKSServoschrauber.tParam_ZeitdSchraubhubSchr	:= T#1500MS;
stParamSKSServoschrauber.tParam_ZeitdSchraubTakt	:= T#2000MS;  
stParamSKSServoschrauber.tParam_ZeitdZustellhubSchr	:= T#2S;
stParamSKSServoschrauber.fSchraubTiefeSollDrehzahl 	:= 8;

(* Referenzposition des Tiefen Encoder*)
nRefPosition	:= -2.2;

									
(*========================================================================================================================*)									
(* === INTERNE PARAMETER === *)								
(*========================================================================================================================*)								
(* === Drehzahl Parameter  === *)								
stParamSKSServoschrauber_Neu.nDrehzahlSoll						:= 1200;	(* Solldrehzahl während Schraubprozess *)		
stParamSKSServoschrauber_Neu.nDrehzahlSollAnfang				:= 250;		(* Solldrehzahl am Anfang *)		
stParamSKSServoschrauber_Neu.nDrehzahlSollEnde				 	:= 300;		(* Solldrehzahl am Ende *)		
									
(* === Zeiten  === *)								
stParamSKSServoschrauber_Neu.tSchraubfallAuswertung			 	:= T#750MS;					
stParamSKSServoschrauber_Neu.tZeitdSchraubTakt				 	:= T#2S;				
									
(* === Drehmoment Parameter === *)								
stParamSKSServoschrauber_Neu.nDrehmomentKonstante				:= 0.2;		(*0x8011:16	*)	
stParamSKSServoschrauber_Neu.nNennleistungMotor					:= 4;		(*0x8011:12	*)
stParamSKSServoschrauber_Neu.nDrehmomentSkalierVorgabe			:= 1.25;	(* 10% Mehr Drehmoment als das Solldrehmoment *)					
stParamSKSServoschrauber_Neu.nDrehmomentErhoehung			 	:= 0.4;		(* Wird auf das Sollmoment addiert um bei nicht erreichen der Tiefe, zu reagieren und Tiefer zu kommen *)			
stParamSKSServoschrauber_Neu.nDrehmomentSkalVerringern		 	:= 0.85;	(*  *)					
stParamSKSServoschrauber_Neu.nDrehmomentSoll					:= 1.4;		(* Soll Drehmoment *)	
									
(* === Tiefen Parameter === *)								
stParamSKSServoschrauber_Neu.nMinimalAufsetztiefe			 	:= 10;		(* MinimalTiefe für Aufsetzen OK *)			
stParamSKSServoschrauber_Neu.nMinimalAufsetztiefeToleranz		:= 5;		(* MinimalTiefe Toleranz für Aufsetzen OK *)					
stParamSKSServoschrauber_Neu.nMinimalSchraubtiefe				:= -10;					
stParamSKSServoschrauber_Neu.nMinimalSchraubtiefeHalb			:= 10;						
									
stParamSKSServoschrauber_Neu.nSchraubtiefeSoll				 	:= -2;		(* Soll Schraubtiefe *)		
stParamSKSServoschrauber_Neu.nTiefeSollDrehzahl				 	:= 8;				
stParamSKSServoschrauber_Neu.nTiefeLangsamDrehzahl				:= 0.5;					
									
(* === Drehwinkelprüfung Parameter === *)								
stParamSKSServoschrauber_Neu.nSollDrehwinkelNachTiefeOK		 	:= 5;						
stParamSKSServoschrauber_Neu.nMaxDrehwinkelNachTiefeOk_F1		:= 720;		(* 2 Umdrehungen	*)				
stParamSKSServoschrauber_Neu.nMaxDrehwinkelNachTiefeOk_F2		:= 180;		(* 1/2 Umdrehungen	*)				
stParamSKSServoschrauber_Neu.nDrehwinkelNachziehen_F1		 	:= 180;		(* NachziehDrehwinkel, nachdem der drehwinkel berechnet wurde im Fall 1 *)				
									
(* === Schrauben berechnung === *)								
stParamSKSServoschrauber_Neu.nHoeheSchraubenDrehung			 	:= 1.6;		(* SchraubenUmdrehung ca. 1.6mm Tiefe = 360°*)			
									
(* === DrehzahlReduktions Parameter === *)								
stParamSKSServoschrauber_Neu.nSkalDrehzReduzHalb				:= 0.5;		(* Drehzahlreduzierung für Halbschraubung *)		
									
(* === Leerlauf Drehmoment Überprüfung === *)								
stParamSKSServoschrauber_Neu.nSollmomentLeerlaufPruefung		:= 0.07;						
stParamSKSServoschrauber_Neu.bLeerlaufPruefungAktiv			 	:= TRUE;	(* Leerlaufprüfung aktivieren *)			
stParamSKSServoschrauber_Neu.tLeerlaufPruefzeit				 	:= T#250MS;			
]]></ST>
      </Implementation>
    </Action>
    <Action Name="ac02_TiefenSensorReferenz" Id="{185b4009-68d9-4849-8666-0b9437047066}">
      <Implementation>
        <ST><![CDATA[bRefStart := TRUE;

CASE iStepRef OF
(*===========================================*)
0:	SetPosSchrauber(
		Execute		:= FALSE,
		Axis		:= arrAxis[cEnc03_Schrauber1]);
		
	ReadOffsetSchrauber(
			Enable	:= FALSE,
			Axis	:= arrAxis[cEnc03_Schrauber1]);
			
	IF bRefStart 
	THEN
		iStepRef := 1;
	END_IF
	
(*===========================================*)
1:	ReadOffsetSchrauber(
		Enable:= TRUE,
		ParameterNumber:= AxisEncoderOffset ,
		ReadMode:= ,
		Axis:= arrAxis[cEnc03_Schrauber1],
		Valid=> ,
		Busy=> ,
		Error=> ,
		ErrorID=> ,
		Value=> nRefOffset);
			
	IF  NOT ReadOffsetSchrauber.Busy
	THEN
		ReadOffsetSchrauber(
			Enable	:= FALSE,
			Axis	:= arrAxis[cEnc03_Schrauber1]);
		iStepRef := 2;
	END_IF
	
(*===========================================*)		
2:	nParamOffsetGeber	:=	nRefPosition
							- arrAxis[cEnc03_Schrauber1].NcToPlc.ActPos
							+ nRefOffset;
							
	iStepRef := 3;
	
(*===========================================*)		
3:	SetPosSchrauber(
		Execute:= TRUE,
		ParameterNumber:= AxisEncoderOffset ,
		Value:= nParamOffsetGeber,
		Axis:= arrAxis[cEnc03_Schrauber1],
		Done=> ,
		Busy=> ,
		Error=> ,
		ErrorID=> );
		
	IF SetPosSchrauber.Done
		AND NOT SetPosSchrauber.Busy
	THEN
		SetPosSchrauber(
			Execute		:= FALSE,
			Axis		:= arrAxis[cEnc03_Schrauber1]);
		iStepRef := 999;
	END_IF
	
(*===========================================*)		
999: iAuswSchrauberMode :=	0;
	bRefStart := FALSE;
END_CASE

]]></ST>
      </Implementation>
    </Action>
    <Action Name="ac10_OriginalSchrauberAblauf" Id="{44ea9629-5774-4b57-8b7e-68ab33bc6377}">
      <Implementation>
        <ST><![CDATA[(*=============================================================================================*)	
(* Originaler SKS-Schrauberablauf von FA Beckhoff Automation- gesichert aus Band222
	Datum: 	11.09.2025
	Author:	N.Kersting/ T.Hinz	 *)
(*=============================================================================================*)	
ac01_AchsAnstrg();
bAchsenInit := FALSE;

(*=============================================================================================*)	
(* Achsstart *)
arrStartAusf[cAxis1261_Schrauber1](
	I_nAchsNr			:= cAxis1261_Schrauber1,
	I_nSchutzBer		:= 1,
	I_bAchseFrgGrdP		:=	TRUE,
	I_bAchseFrgArbP		:= TRUE,
	I_bAchseFrgRglP		:= FALSE,
	I_bAchseStopPos		:= 	fbSchrauber_PnP_Original.Q_bSchrHalt,
	I_nStreckeRglP		:= 2);
	
arrNcAchsen[cAxis1261_Schrauber1].stAuftrg.bPTP_halt	:= fbSchrauber_PnP_Original.Q_bSchrHalt;

(*=============================================================================================*)
(* Achsansteurung *)
IF fbSchrauber_PnP_Original.Q_bModuloBetrArt
THEN
	arrAnstgSchrauberAchse[1].I_nBetrArt	:= 1;
ELSE
	arrAnstgSchrauberAchse[1].I_nBetrArt	:= 0;
END_IF

(*=============================================================================================*)	
(* Drehmoment *)
arrNcAchsen[cAxis1261_Schrauber1].stEinAusG.Q_nDrehmomentGrenzwert := fbSchrauber_PnP_Original.Q_nTorque;

(*=============================================================================================*)	
(* Reset *)
arrNcAchsReset[cAxis1261_Schrauber1]:= fbSchrauber_PnP_Original.Q_bAxisReset;

IF (stSKSSchrauberInOut_Vis_Schr_1.I_bTaktStart
	OR	Main.fbButtonBox.Q_stButtons[1].Q)
	AND NOT fbSchrauber_PnP_Original.Q_bBusy
THEN
	bTaktStartMerker := TRUE;
ELSIF
	fbSchrauber_PnP_Original.Q_bDone
	AND NOT fbSchrauber_PnP_Original.Q_bBusy
	AND NOT stSKSSchrauberInOut_Vis_Schr_1.I_bTaktStart
	OR fbSchrauber_PnP_Original.Q_bError
THEN
	 bTaktStartMerker := FALSE;
END_IF
 
(*=============================================================================================*)	
(* Alter Baustein *)
fbSchrauber_PnP_Original(
	I_bResetTeststation := 			FALSE, (* Nur für aufbau an der Testwand *)
	I_bTaktFrg:= 					stSKSSchrauberInOut_Vis_Schr_1.I_bTaktFrg, 
	I_bTaktStop:= 					stSKSSchrauberInOut_Vis_Schr_1.I_bTaktStop, 
	I_bQuittFehler:= 				stSKSSchrauberInOut_Vis_Schr_1.I_bQuittFehler, 
	I_bSchutzbereichOK:= 			TRUE, 
	I_bTaktStart:= 					bTaktStartMerker, 
	I_bGrdstlgSchrEinh:= 			bGVLEndlageZyl_1_Eingef (*OR stSKSSchrauberInOut_Vis_Schr_1.I_bGrdstlgSchrEinh*), 	(* Achtung muss nachher wieder weggenommen werden, wenn der Physische aufbau da ist !!!!!*)
	I_bZustellZylAusgef:= 			bGVLEndlageZyl_2_Ausgef (*OR stSKSSchrauberInOut_Vis_Schr_1.I_bZustellZylAusgef*), 	(* Achtung muss nachher wieder weggenommen werden, wenn der Physische aufbau da ist !!!!!*)
	I_fSchraubTiefeAuswurf:= 		, 
	I_fTiefentoleranzPositiv:= 		, 
	I_fTiefentoleranzNegativ:= 		, 
	I_nAchsId:= 					cAxis1261_Schrauber1, 
	I_nEncId:= 						cEnc03_Schrauber1, 
	I_stParam:= 					stParamSKSServoschrauber, 
	I_tAutoQuit:= 					, 
	I_bSchraubeNachschiessen:=		 , 
	I_bReferenzfahrtAktiv:= 		, 
	I_bFreigabeAuswerfen:= 			, 
	I_sDateipfad:= 					, 
	I_bSchrauberLogOn:= 			, 
	I_nMotorHersteller:=			 1, 
	I_bHuettenSchr:= 				, 
	Q_bBusy=> 						stSKSSchrauberInOut_Vis_Schr_1.Q_bBusy, 
	Q_bDone=>						stSKSSchrauberInOut_Vis_Schr_1.Q_bDone ,	 
	Q_bError=>						stSKSSchrauberInOut_Vis_Schr_1.Q_bError , 
	Q_sPosZustand=> , 
	Q_bGrundstellungAktiv=> , 
	Q_bGrundstellungOk=> , 
	Q_bSchraubHub=> , 
	Q_bSchrAuswurf=> , 
	Q_bSchrHalt=> , 
	Q_nTorque=> , 
	Q_bAxisReset=> , 
	Q_nErrorId=> 					stSKSSchrauberInOut_Vis_Schr_1.Q_nErrorId, 
	Q_bDrehmomentFehler=> 			stSKSSchrauberInOut_Vis_Schr_1.Q_bDrehmomentFehler, 
	Q_bTuerFreigabe=> , 
	Q_nStep=> 						stSKSSchrauberInOut_Vis_Schr_1.Q_nStep, 
	Q_strStep=> , 
	Q_bModuloBetrArt=> , 
	Q_sStatus=> 					stSKSSchrauberInOut_Vis_Schr_1.Q_sStatus, 
	IQ_fbObjSchlauch:= 				objSchlauch, 
	IQ_stMeldung:= 					stAchsMeldung);	
	
(*=============================================================================================*)	
(* Schlauch belegung *)
objSchlauch.I_bSchlauchBelegt		:=	stSKSSchrauberInOut_Vis_Schr_1.I_bSchlauchBelegt;
objSchlauch.I_bSchrauberBelegt		:=	stSKSSchrauberInOut_Vis_Schr_1.I_bSchrauberBelegt;
objSchlauch.I_bTasteVereinzelung	:=	stSKSSchrauberInOut_Vis_Schr_1.I_bVereinzelungStart;
objSchlauch.I_bSchrAuswurfStart		:=	stSKSSchrauberInOut_Vis_Schr_1.I_bAuswurfStart;

(*=============================================================================================*)	
(* Visu Übergabe *)
stSKSSchrauberInOut_Vis_Schr_1.Q_nActVelo	:=	arrNcAchsen[cAxis1261_Schrauber1].fVeloIstwert;
stSKSSchrauberInOut_Vis_Schr_1.Q_nActPos	:=	arrNcAchsen[cAxis1261_Schrauber1].fPosIstwert;
stSKSSchrauberInOut_Vis_Schr_1.Q_nActDepth	:=	arrNcAchsen[cEnc03_Schrauber1].fPosIstwert;
stSKSSchrauberInOut_Vis_Schr_1.Q_nActTorque	:=	arrNcAchsen[cAxis1261_Schrauber1].stEinAusG.I_nDrehmomentIstwert;

(*=============================================================================================*)	
(* Output Übergabe *)

bGVLVentil_1_Ausfahr:=		fbSchrauber_PnP_Original.Q_bSchraubHub;
bGVLVentil_1_Einfahr:=		NOT fbSchrauber_PnP_Original.Q_bSchraubHub;

bGVLVentil_2_Ausfahr:=		NOT fbSchrauber_PnP_Original.Q_bSchrAuswurf;
bGVLVentil_2_Einfahr:=		 fbSchrauber_PnP_Original.Q_bSchrAuswurf;

]]></ST>
      </Implementation>
    </Action>
    <Action Name="ac11_EntwickelungSchrauberAblauf" Id="{98a7685c-a454-466d-b4b8-3d118ec876ad}">
      <Implementation>
        <ST><![CDATA[(*=============================================================================================*)	
(* Originaler SKS-Schrauberablauf von FA Beckhoff Automation- gesichert aus Band222
	Datum: 	11.09.2025
	Author:	N.Kersting/ T.Hinz	 *)
(*=============================================================================================*)	
ac01_AchsAnstrg();
bAchsenInit := FALSE;

(*=============================================================================================*)	
(* Achsstart *)
arrStartAusf[cAxis1261_Schrauber1](
	I_nAchsNr			:= cAxis1261_Schrauber1,
	I_nSchutzBer		:= 1,
	I_bAchseFrgGrdP		:=	TRUE,
	I_bAchseFrgArbP		:= TRUE,
	I_bAchseFrgRglP		:= FALSE,
	I_bAchseStopPos		:= 	fbSchrauber_PnP_Entwickel_3.Q_bSchrHalt,
	I_nStreckeRglP		:= 2);
	
arrNcAchsen[cAxis1261_Schrauber1].stAuftrg.bPTP_halt	:= fbSchrauber_PnP_Entwickel_3.Q_bSchrHalt;

(*=============================================================================================*)
(* Achsansteurung *)
IF fbSchrauber_PnP_Entwickel_3.Q_bModuloBetrArt
THEN
	arrAnstgSchrauberAchse[1].I_nBetrArt	:= 1;
ELSE
	arrAnstgSchrauberAchse[1].I_nBetrArt	:= 0;
END_IF

(*=============================================================================================*)	
(* Drehmoment *)
arrNcAchsen[cAxis1261_Schrauber1].stEinAusG.Q_nDrehmomentGrenzwert := fbSchrauber_PnP_Entwickel_3.Q_nTorque;

(*=============================================================================================*)	
(* Reset *)
arrNcAchsReset[cAxis1261_Schrauber1]:= fbSchrauber_PnP_Entwickel_3.Q_bAxisReset;

IF stSKSSchrauberInOut_Vis_Schr_1.I_bTaktStart
	OR Main.fbButtonBox.Q_stButtons[1].Q
	AND NOT fbSchrauber_PnP_Entwickel_3.Q_bBusy
THEN
	bTaktStartMerker := TRUE;
ELSIF
	fbSchrauber_PnP_Entwickel_3.Q_bDone
	AND NOT fbSchrauber_PnP_Entwickel_3.Q_bBusy
	AND NOT stSKSSchrauberInOut_Vis_Schr_1.I_bTaktStart
	OR fbSchrauber_PnP_Entwickel_3.Q_bError
	OR Main.fbButtonBox.Q_stButtons[2].Q
THEN
	 bTaktStartMerker := FALSE;
END_IF
 
(*=============================================================================================*)	
(* Neuer Baustein *)
fbSchrauber_PnP_Entwickel_3(
	I_bResetTeststation := 			FALSE, (* Nur für aufbau an der Testwand *)
	I_bTaktFrg:= 					stSKSSchrauberInOut_Vis_Schr_1.I_bTaktFrg, 
	I_bTaktStop:= 					stSKSSchrauberInOut_Vis_Schr_1.I_bTaktStop, 
	I_bQuittFehler:= 				stSKSSchrauberInOut_Vis_Schr_1.I_bQuittFehler, 
	I_bSchutzbereichOK:= 			TRUE, 
	I_bTaktStart:= 					bTaktStartMerker, 
	I_bGrdstlgSchrEinh:= 			bGVLEndlageZyl_1_Eingef (*OR stSKSSchrauberInOut_Vis_Schr_1.I_bGrdstlgSchrEinh*), 	(* Achtung muss nachher wieder weggenommen werden, wenn der Physische aufbau da ist !!!!!*)
	I_bZustellZylAusgef:= 			bGVLEndlageZyl_2_Ausgef (*OR stSKSSchrauberInOut_Vis_Schr_1.I_bZustellZylAusgef*), 	(* Achtung muss nachher wieder weggenommen werden, wenn der Physische aufbau da ist !!!!!*)
	I_fSchraubTiefeAuswurf:= 		, 
	I_fTiefentoleranzPositiv:= 		, 
	I_fTiefentoleranzNegativ:= 		, 
	I_nAchsId:= 					cAxis1261_Schrauber1, 
	I_nEncId:= 						cEnc03_Schrauber1, 
	I_stParam:= 					stParamSKSServoschrauber,
	I_stSchraubParam :=				stParamSKSServoschrauber_Neu,
	I_tAutoQuit:= 					, 
	I_bSchraubeNachschiessen:=		 , 
	I_bReferenzfahrtAktiv:= 		, 
	I_bFreigabeAuswerfen:= 			, 
	I_sDateipfad:= 					, 
	I_bSchrauberLogOn:= 			, 
	I_nMotorHersteller:=			 1, 
	I_bHuettenSchr:= 				, 
	Q_bBusy=> 						stSKSSchrauberInOut_Vis_Schr_1.Q_bBusy, 
	Q_bDone=>						stSKSSchrauberInOut_Vis_Schr_1.Q_bDone ,	 
	Q_bError=>						stSKSSchrauberInOut_Vis_Schr_1.Q_bError , 
	Q_sPosZustand=> , 
	Q_bGrundstellungAktiv=> , 
	Q_bGrundstellungOk=> , 
	Q_bSchraubHub=> , 
	Q_bSchrAuswurf=> , 
	Q_bSchrHalt=> , 
	Q_nTorque=> , 
	Q_bAxisReset=> , 
	Q_nErrorId=> 					stSKSSchrauberInOut_Vis_Schr_1.Q_nErrorId, 
	Q_bDrehmomentFehler=> 			stSKSSchrauberInOut_Vis_Schr_1.Q_bDrehmomentFehler, 
	Q_bTuerFreigabe=> , 
	Q_nStep=> 						stSKSSchrauberInOut_Vis_Schr_1.Q_nStep, 
	Q_strStep=> , 
	Q_bModuloBetrArt=> , 
	Q_sStatus=> 					stSKSSchrauberInOut_Vis_Schr_1.Q_sStatus, 
	IQ_fbObjSchlauch:= 				objSchlauch, 
	IQ_stMeldung:= 					stAchsMeldung);	
	
(*=============================================================================================*)	
(* Schlauch belegung *)
objSchlauch.I_bSchlauchBelegt		:=	stSKSSchrauberInOut_Vis_Schr_1.I_bSchlauchBelegt;
objSchlauch.I_bSchrauberBelegt		:=	stSKSSchrauberInOut_Vis_Schr_1.I_bSchrauberBelegt;
objSchlauch.I_bTasteVereinzelung	:=	stSKSSchrauberInOut_Vis_Schr_1.I_bVereinzelungStart;
objSchlauch.I_bSchrAuswurfStart		:=	stSKSSchrauberInOut_Vis_Schr_1.I_bAuswurfStart;

(*=============================================================================================*)	
(* Visu Übergabe *)
stSKSSchrauberInOut_Vis_Schr_1.Q_nActVelo	:=	arrNcAchsen[cAxis1261_Schrauber1].fVeloIstwert;
stSKSSchrauberInOut_Vis_Schr_1.Q_nActPos	:=	arrNcAchsen[cAxis1261_Schrauber1].fPosIstwert;
stSKSSchrauberInOut_Vis_Schr_1.Q_nActDepth	:=	arrNcAchsen[cEnc03_Schrauber1].fPosIstwert;
stSKSSchrauberInOut_Vis_Schr_1.Q_nActTorque	:=	arrNcAchsen[cAxis1261_Schrauber1].stEinAusG.I_nDrehmomentIstwert;

stSKSSchrauberInOut_Vis_Schr_1.Q_nLastDepth		:=	fbSchrauber_PnP_Entwickel_3.nPD_Tiefe;
stSKSSchrauberInOut_Vis_Schr_1.Q_nLastTorque	:=	fbSchrauber_PnP_Entwickel_3.nPD_Drehmoment;
stSKSSchrauberInOut_Vis_Schr_1.Q_nLastAngle		:=	fbSchrauber_PnP_Entwickel_3.nPD_Drehwinkel;
(*=============================================================================================*)	
(* Output Übergabe *)

bGVLVentil_1_Ausfahr:=		fbSchrauber_PnP_Entwickel_3.Q_bSchraubHub;
bGVLVentil_1_Einfahr:=		NOT fbSchrauber_PnP_Entwickel_3.Q_bSchraubHub;

bGVLVentil_2_Ausfahr:=		NOT fbSchrauber_PnP_Entwickel_3.Q_bSchrAuswurf;
bGVLVentil_2_Einfahr:=		 fbSchrauber_PnP_Entwickel_3.Q_bSchrAuswurf;

]]></ST>
      </Implementation>
    </Action>
    <Action Name="ac12_EntwickelungSchrauberAblauf" Id="{c36945c8-5d58-4043-839d-701de2ae08c4}">
      <Implementation>
        <ST><![CDATA[(*=============================================================================================*)	
(* Originaler SKS-Schrauberablauf von FA Beckhoff Automation- gesichert aus Band222
	Datum: 	11.09.2025
	Author:	N.Kersting/ T.Hinz	 *)
(*=============================================================================================*)	
ac01_AchsAnstrg();
bAchsenInit := FALSE;

(*=============================================================================================*)	
(* Achsstart *)
arrStartAusf[cAxis1261_Schrauber1](
	I_nAchsNr			:= cAxis1261_Schrauber1,
	I_nSchutzBer		:= 1,
	I_bAchseFrgGrdP		:=	TRUE,
	I_bAchseFrgArbP		:= TRUE,
	I_bAchseFrgRglP		:= FALSE,
	I_bAchseStopPos		:= 	fbSchrauber_PnP_Entwickel_3.Q_bSchrHalt,
	I_nStreckeRglP		:= 2);
	
arrNcAchsen[cAxis1261_Schrauber1].stAuftrg.bPTP_halt	:= fbSchrauber_PnP_Entwickel_3.Q_bSchrHalt;

(*=============================================================================================*)
(* Achsansteurung *)
IF fbSchrauber_PnP_Entwickel_3.Q_bModuloBetrArt
THEN
	arrAnstgSchrauberAchse[1].I_nBetrArt	:= 1;
ELSE
	arrAnstgSchrauberAchse[1].I_nBetrArt	:= 0;
END_IF

(*=============================================================================================*)	
(* Drehmoment *)
arrNcAchsen[cAxis1261_Schrauber1].stEinAusG.Q_nDrehmomentGrenzwert := fbSchrauber_PnP_Entwickel_4.Q_nTorque;

(*=============================================================================================*)	
(* Reset *)
arrNcAchsReset[cAxis1261_Schrauber1]:= fbSchrauber_PnP_Entwickel_4.Q_bAxisReset;

IF stSKSSchrauberInOut_Vis_Schr_1.I_bTaktStart
	OR Main.fbButtonBox.Q_stButtons[1].Q
	AND NOT fbSchrauber_PnP_Entwickel_4.Q_bBusy
THEN
	bTaktStartMerker := TRUE;
ELSIF
	fbSchrauber_PnP_Entwickel_4.Q_bDone
	AND NOT fbSchrauber_PnP_Entwickel_4.Q_bBusy
	AND NOT stSKSSchrauberInOut_Vis_Schr_1.I_bTaktStart
	OR fbSchrauber_PnP_Entwickel_4.Q_bError
	OR Main.fbButtonBox.Q_stButtons[2].Q
THEN
	 bTaktStartMerker := FALSE;
END_IF
 
(*=============================================================================================*)	
(* Neuer Baustein *)
fbSchrauber_PnP_Entwickel_4(
	I_bResetTeststation := 			FALSE, (* Nur für aufbau an der Testwand *)
	I_bTaktFrg:= 					stSKSSchrauberInOut_Vis_Schr_1.I_bTaktFrg, 
	I_bTaktStop:= 					stSKSSchrauberInOut_Vis_Schr_1.I_bTaktStop, 
	I_bQuittFehler:= 				stSKSSchrauberInOut_Vis_Schr_1.I_bQuittFehler, 
	I_bSchutzbereichOK:= 			TRUE, 
	I_bTaktStart:= 					bTaktStartMerker, 
	I_bGrdstlgSchrEinh:= 			bGVLEndlageZyl_1_Eingef (*OR stSKSSchrauberInOut_Vis_Schr_1.I_bGrdstlgSchrEinh*), 	(* Achtung muss nachher wieder weggenommen werden, wenn der Physische aufbau da ist !!!!!*)
	I_bZustellZylAusgef:= 			bGVLEndlageZyl_2_Ausgef (*OR stSKSSchrauberInOut_Vis_Schr_1.I_bZustellZylAusgef*), 	(* Achtung muss nachher wieder weggenommen werden, wenn der Physische aufbau da ist !!!!!*)
	I_fSchraubTiefeAuswurf:= 		, 
	I_fTiefentoleranzPositiv:= 		, 
	I_fTiefentoleranzNegativ:= 		, 
	I_nAchsId:= 					cAxis1261_Schrauber1, 
	I_nEncId:= 						cEnc03_Schrauber1, 
	I_stParam:= 					stParamSKSServoschrauber,
	I_stSchraubParam :=				stParamSKSServoschrauber_Neu,
	I_tAutoQuit:= 					, 
	I_bSchraubeNachschiessen:=		 , 
	I_bReferenzfahrtAktiv:= 		, 
	I_bFreigabeAuswerfen:= 			, 
	I_sDateipfad:= 					, 
	I_bSchrauberLogOn:= 			, 
	I_nMotorHersteller:=			 1, 
	I_bHuettenSchr:= 				, 
	Q_bBusy=> 						stSKSSchrauberInOut_Vis_Schr_1.Q_bBusy, 
	Q_bDone=>						stSKSSchrauberInOut_Vis_Schr_1.Q_bDone ,	 
	Q_bError=>						stSKSSchrauberInOut_Vis_Schr_1.Q_bError , 
	Q_sPosZustand=> , 
	Q_bGrundstellungAktiv=> , 
	Q_bGrundstellungOk=> , 
	Q_bSchraubHub=> , 
	Q_bSchrAuswurf=> , 
	Q_bSchrHalt=> , 
	Q_nTorque=> , 
	Q_bAxisReset=> , 
	Q_nErrorId=> 					stSKSSchrauberInOut_Vis_Schr_1.Q_nErrorId, 
	Q_bDrehmomentFehler=> 			stSKSSchrauberInOut_Vis_Schr_1.Q_bDrehmomentFehler, 
	Q_bTuerFreigabe=> , 
	Q_nStep=> 						stSKSSchrauberInOut_Vis_Schr_1.Q_nStep, 
	Q_strStep=> , 
	Q_bModuloBetrArt=> , 
	Q_sStatus=> 					stSKSSchrauberInOut_Vis_Schr_1.Q_sStatus, 
	IQ_fbObjSchlauch:= 				objSchlauch, 
	IQ_stMeldung:= 					stAchsMeldung);	
	
(*=============================================================================================*)	
(* Schlauch belegung *)
objSchlauch.I_bSchlauchBelegt		:=	stSKSSchrauberInOut_Vis_Schr_1.I_bSchlauchBelegt;
objSchlauch.I_bSchrauberBelegt		:=	stSKSSchrauberInOut_Vis_Schr_1.I_bSchrauberBelegt;
objSchlauch.I_bTasteVereinzelung	:=	stSKSSchrauberInOut_Vis_Schr_1.I_bVereinzelungStart;
objSchlauch.I_bSchrAuswurfStart		:=	stSKSSchrauberInOut_Vis_Schr_1.I_bAuswurfStart;

(*=============================================================================================*)	
(* Visu Übergabe *)
stSKSSchrauberInOut_Vis_Schr_1.Q_nActVelo	:=	arrNcAchsen[cAxis1261_Schrauber1].fVeloIstwert;
stSKSSchrauberInOut_Vis_Schr_1.Q_nActPos	:=	arrNcAchsen[cAxis1261_Schrauber1].fPosIstwert;
stSKSSchrauberInOut_Vis_Schr_1.Q_nActDepth	:=	arrNcAchsen[cEnc03_Schrauber1].fPosIstwert;
stSKSSchrauberInOut_Vis_Schr_1.Q_nActTorque	:=	arrNcAchsen[cAxis1261_Schrauber1].stEinAusG.I_nDrehmomentIstwert;

stSKSSchrauberInOut_Vis_Schr_1.Q_nLastDepth		:=	fbSchrauber_PnP_Entwickel_4.fbSKSSchraubNob.nPD_Tiefe;
stSKSSchrauberInOut_Vis_Schr_1.Q_nLastTorque	:=	fbSchrauber_PnP_Entwickel_4.fbSKSSchraubNob.nPD_Drehmoment;
stSKSSchrauberInOut_Vis_Schr_1.Q_nLastAngle		:=	fbSchrauber_PnP_Entwickel_4.fbSKSSchraubNob.nPD_Drehwinkel;
(*=============================================================================================*)	
(* Output Übergabe *)

bGVLVentil_1_Ausfahr:=		fbSchrauber_PnP_Entwickel_4.Q_bSchraubHub;
bGVLVentil_1_Einfahr:=		NOT fbSchrauber_PnP_Entwickel_4.Q_bSchraubHub;

bGVLVentil_2_Ausfahr:=		NOT fbSchrauber_PnP_Entwickel_4.Q_bSchrAuswurf;
bGVLVentil_2_Einfahr:=		 fbSchrauber_PnP_Entwickel_4.Q_bSchrAuswurf;

]]></ST>
      </Implementation>
    </Action>
    <Action Name="ac20_SchrauberArbeitsstellung" Id="{c81233d9-9ddd-4b67-aae6-f75549901d41}">
      <Implementation>
        <ST><![CDATA[(*=============================================================================================*)	
(* Output Übergabe *)

bGVLVentil_1_Ausfahr:=		TRUE;
bGVLVentil_1_Einfahr:=		FALSE;

bGVLVentil_2_Ausfahr:=		FALSE;
bGVLVentil_2_Einfahr:=		TRUE;


(*=============================================================================================*)	
(* Visu Übergabe *)
stSKSSchrauberInOut_Vis_Schr_1.Q_nActVelo	:=	arrNcAchsen[cAxis1261_Schrauber1].fVeloIstwert;
stSKSSchrauberInOut_Vis_Schr_1.Q_nActPos	:=	arrNcAchsen[cAxis1261_Schrauber1].fPosIstwert;
stSKSSchrauberInOut_Vis_Schr_1.Q_nActDepth	:=	arrNcAchsen[cEnc03_Schrauber1].fPosIstwert;
stSKSSchrauberInOut_Vis_Schr_1.Q_nActTorque	:=	arrNcAchsen[cAxis1261_Schrauber1].stEinAusG.I_nDrehmomentIstwert;]]></ST>
      </Implementation>
    </Action>
    <Action Name="ac90_Status" Id="{be94b545-6957-4f9f-93df-1daf3e93c564}">
      <Implementation>
        <ST><![CDATA[
CASE iAuswSchrauberMode OF
0:	;
1:	ac10_OriginalSchrauberAblauf();
	(*=============================================================================================*)	
	(* Statusschnittstelle *)
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.bDrehmomentErhoehung	:=	0;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.bDrehmomentOk			:=	0;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.bDrehwinkelOk			:=	0;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.bTiefeOk				:=	0;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.iSchraubfall			:=	0;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.nActDrehmoment		:=	fbSchrauber_PnP_Original.fDrehmomentIstMittel;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.nActPos				:=	arrNcAchsen[cAxis1261_Schrauber1].fPosIstwert;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.nActTiefe				:=	arrNcAchsen[cEnc03_Schrauber1].fPosIstwert;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.nActVelo				:=	arrNcAchsen[cAxis1261_Schrauber1].fVeloIstwert;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.nSollDrehmoment		:=	fbSchrauber_PnP_Original.Q_nTorque;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.nSollVelo				:=	arrNcAchsen[cAxis1261_Schrauber1].stAuftrg.fPTP_Geschw;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.nStep					:=	fbSchrauber_PnP_Original.nStep;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.nActDrehwinkel		:=	0;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.tSchraubtaktKomplett	:=	T#0S;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.tSchraubtaktSchrauben	:=	fbSchrauber_PnP_Original.timeSchraubtakt;

4:	(*=============================================================================================*)	
	(* Statusschnittstelle *)
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.bDrehmomentErhoehung	:=	fbSchrauber_PnP_Entwickel_3.bDrehmomentErhoehen;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.bDrehmomentOk			:=	fbSchrauber_PnP_Entwickel_3.bDrehmomOkMem;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.bDrehwinkelOk			:=	fbSchrauber_PnP_Entwickel_3.bDrehwinkelOkMem;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.bTiefeOk				:=	fbSchrauber_PnP_Entwickel_3.bTiefeOkMem;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.iSchraubfall			:=	fbSchrauber_PnP_Entwickel_3.nSchraubFallMerker;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.nActDrehmoment		:=	fbSchrauber_PnP_Entwickel_3.fDrehmomentIstMittel;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.nActPos				:=	fbSchrauber_PnP_Entwickel_3.stSchrauberAchsStruc_InOut.NC_Axis_IN_nActPos;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.nActTiefe				:=	fbSchrauber_PnP_Entwickel_3.fSchraubTiefeIst;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.nActVelo				:=	fbSchrauber_PnP_Entwickel_3.stSchrauberAchsStruc_InOut.NC_Axis_IN_nActVelo;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.nSollDrehmoment		:=	fbSchrauber_PnP_Entwickel_3.nSollDrehmomentErrechnet;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.nSollVelo				:=	fbSchrauber_PnP_Entwickel_3.stSchrauberAchsStruc_InOut.NC_Axis_OUT_nPTPVelo;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.nStep					:=	fbSchrauber_PnP_Entwickel_3.nStep;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.nActDrehwinkel		:=	fbSchrauber_PnP_Entwickel_3.nDrehwinkelMem;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.tSchraubtaktKomplett	:=	fbSchrauber_PnP_Entwickel_3.tPD_Schraubtakt_Komplett;
	GlobVar_SchrauberStatus.stSchrauberStatusDiag.tSchraubtaktSchrauben	:=	fbSchrauber_PnP_Entwickel_3.tPD_Schraubtakt_Schrauben;
5:	;
6:	;
END_CASE

]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="PRG_Schrauber">
      <LineId Id="328" Count="2" />
      <LineId Id="407" Count="0" />
      <LineId Id="405" Count="0" />
      <LineId Id="408" Count="0" />
      <LineId Id="410" Count="4" />
      <LineId Id="416" Count="2" />
      <LineId Id="415" Count="0" />
      <LineId Id="420" Count="2" />
      <LineId Id="419" Count="0" />
      <LineId Id="424" Count="2" />
      <LineId Id="423" Count="0" />
      <LineId Id="409" Count="0" />
      <LineId Id="331" Count="2" />
      <LineId Id="336" Count="0" />
      <LineId Id="454" Count="0" />
      <LineId Id="343" Count="0" />
      <LineId Id="338" Count="0" />
      <LineId Id="340" Count="1" />
      <LineId Id="308" Count="0" />
      <LineId Id="374" Count="1" />
      <LineId Id="373" Count="0" />
    </LineIds>
    <LineIds Name="PRG_Schrauber.ac00_Init">
      <LineId Id="12" Count="0" />
      <LineId Id="20" Count="1" />
      <LineId Id="13" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="1" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="4" Count="1" />
      <LineId Id="23" Count="0" />
      <LineId Id="25" Count="2" />
      <LineId Id="11" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="49" Count="2" />
      <LineId Id="36" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="37" Count="3" />
      <LineId Id="31" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="44" Count="0" />
    </LineIds>
    <LineIds Name="PRG_Schrauber.ac01_AchsAnstrg">
      <LineId Id="63" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="2" Count="5" />
      <LineId Id="17" Count="2" />
      <LineId Id="69" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="73" Count="2" />
      <LineId Id="72" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="21" Count="6" />
      <LineId Id="29" Count="1" />
      <LineId Id="40" Count="16" />
      <LineId Id="59" Count="0" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="PRG_Schrauber.ac01_Parameter">
      <LineId Id="2" Count="1" />
      <LineId Id="21" Count="1" />
      <LineId Id="4" Count="8" />
      <LineId Id="1" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="24" Count="46" />
      <LineId Id="23" Count="0" />
    </LineIds>
    <LineIds Name="PRG_Schrauber.ac02_TiefenSensorReferenz">
      <LineId Id="24" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="226" Count="1" />
      <LineId Id="26" Count="0" />
      <LineId Id="274" Count="0" />
      <LineId Id="271" Count="1" />
      <LineId Id="67" Count="0" />
      <LineId Id="273" Count="0" />
      <LineId Id="132" Count="2" />
      <LineId Id="68" Count="0" />
      <LineId Id="247" Count="0" />
      <LineId Id="249" Count="12" />
      <LineId Id="263" Count="4" />
      <LineId Id="248" Count="0" />
      <LineId Id="293" Count="0" />
      <LineId Id="275" Count="0" />
      <LineId Id="269" Count="0" />
      <LineId Id="294" Count="1" />
      <LineId Id="297" Count="2" />
      <LineId Id="36" Count="0" />
      <LineId Id="230" Count="7" />
      <LineId Id="201" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="228" Count="1" />
      <LineId Id="94" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="268" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="PRG_Schrauber.ac10_OriginalSchrauberAblauf">
      <LineId Id="231" Count="5" />
      <LineId Id="348" Count="0" />
      <LineId Id="248" Count="29" />
      <LineId Id="350" Count="1" />
      <LineId Id="365" Count="0" />
      <LineId Id="352" Count="6" />
      <LineId Id="363" Count="0" />
      <LineId Id="359" Count="2" />
      <LineId Id="278" Count="3" />
      <LineId Id="366" Count="0" />
      <LineId Id="283" Count="64" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="PRG_Schrauber.ac11_EntwickelungSchrauberAblauf">
      <LineId Id="2" Count="5" />
      <LineId Id="119" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="20" Count="28" />
      <LineId Id="120" Count="1" />
      <LineId Id="157" Count="0" />
      <LineId Id="122" Count="6" />
      <LineId Id="133" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="129" Count="2" />
      <LineId Id="49" Count="3" />
      <LineId Id="159" Count="0" />
      <LineId Id="54" Count="12" />
      <LineId Id="160" Count="0" />
      <LineId Id="67" Count="41" />
      <LineId Id="135" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="134" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="110" Count="7" />
      <LineId Id="139" Count="0" />
      <LineId Id="156" Count="0" />
    </LineIds>
    <LineIds Name="PRG_Schrauber.ac12_EntwickelungSchrauberAblauf">
      <LineId Id="2" Count="5" />
      <LineId Id="119" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="20" Count="28" />
      <LineId Id="120" Count="1" />
      <LineId Id="157" Count="0" />
      <LineId Id="122" Count="6" />
      <LineId Id="133" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="129" Count="2" />
      <LineId Id="49" Count="3" />
      <LineId Id="159" Count="0" />
      <LineId Id="54" Count="12" />
      <LineId Id="160" Count="0" />
      <LineId Id="67" Count="41" />
      <LineId Id="135" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="134" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="110" Count="7" />
      <LineId Id="139" Count="0" />
      <LineId Id="156" Count="0" />
    </LineIds>
    <LineIds Name="PRG_Schrauber.ac20_SchrauberArbeitsstellung">
      <LineId Id="2" Count="6" />
      <LineId Id="1" Count="0" />
      <LineId Id="10" Count="6" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="PRG_Schrauber.ac90_Status">
      <LineId Id="18" Count="3" />
      <LineId Id="41" Count="13" />
      <LineId Id="40" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="27" Count="12" />
      <LineId Id="22" Count="0" />
      <LineId Id="55" Count="1" />
      <LineId Id="23" Count="1" />
      <LineId Id="2" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>