<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Schrauber_PnP_Neu" Id="{27017add-3654-423b-bdd0-24cd6af9ea31}" SpecialFunc="None">
    <Declaration><![CDATA[// Korrigierte Version mit behobenen Inkonsistenzen
(*
ABLAUFBESCHREIBUNG SERVOSCHRAUBER:

1. INITIALISIERUNG (Step 0)
   - Reset aller Ausgänge und Variablen
   - Prüfung der Grundbedingungen

2. STARTBEDINGUNGEN (Step 10)
   - Prüfung aller Freigaben und Sicherheitsbedingungen
   - Überprüfung des Schutzbereichs

3. SCHRAUBHUB (Step 20)
   - Vorfahren des Schraubhubs
   - Überwachung des Zustellzylinders

4. DREHZAHLRAMPE (Step 30)
   - Kontrollierte Beschleunigung über 500ms
   - Maximale Drehzahl 400 U/min

5. HAUPTSCHRAUBVORGANG (Step 40)
   - Überwachung von Drehmoment und Tiefe
   - Erfassung der Tiefenänderung

6. DREHZAHLREDUKTION (Step 50)
   - 2mm vor Solltiefe beginnt Drehzahlreduktion
   - Übergang auf Anzugsgeschwindigkeit (200 U/min)

7. DREHMOMENTÜBERWACHUNG (Step 60)
   Behandlung der vier Schraubfälle

8. ABSCHLUSS (Step 70-80)
   - Kontrolliertes Beenden des Schraubvorgangs
   - Rückfahrt in Grundstellung

9. FEHLERBEHANDLUNG (Step -1)
   - Zentrale Fehlerbehandlung
   - Quittierungsmöglichkeit
*)
FUNCTION_BLOCK FB_Schrauber_PnP_Neu
VAR_INPUT
    // Grundlegende Steuerungseingänge
    I_bTaktFrg               : BOOL;          // Freigabe für Takt
    I_bTaktStop              : BOOL;          // Stopp des Takts
    I_bAuto                  : BOOL;          // Automatikbetrieb
    I_bHand                  : BOOL;          // Handbetrieb
    I_bQuittFehler          : BOOL;          // Fehlerquittierung
    I_bGrundstellung        : BOOL;          // Grundstellungsanforderung
    I_bSchutzbereichOK      : BOOL;          // Schutzbereich freigegeben

    // Prozesseingänge
    I_bTaktStart            : BOOL;          // Start Schraubvorgang
    I_bTaktStartHalb        : BOOL;          // Start Halbschraubvorgang
    I_bGrdstlgSchrEinh      : BOOL;          // Grundstellung Schraubeinheit
    I_bZustellZylAusgef     : BOOL;          // Zustellzylinder ausgefahren

    // Parameter
    I_fSchraubTiefeAuswurf  : LREAL;         // Auswurftiefe
    I_fTiefentoleranzPos    : LREAL := 1.0;  // Positive Tiefentoleranz
    I_fTiefentoleranzNeg    : LREAL := 0.5;  // Negative Tiefentoleranz
    I_nAchsId               : INT;            // Achsen-ID
    I_nEncId                : INT;            // Encoder-ID
    I_stParam               : ST_ParamSKSServoschrauber; // Parameter
    I_tAutoQuit             : TIME := T#0MS;  // Automatische Quittierzeit
    
    // Steuerungseingänge
    I_bSchraubeNachschiessen: BOOL;          // Nachschiessen aktiv
    I_bReferenzfahrtAktiv   : BOOL;          // Referenzfahrt aktiv
    I_bFreigabeAuswerfen    : BOOL;          // Freigabe Auswerfen
    I_bSchrauberLogOn       : BOOL;          // Schrauber Logging aktiv
    I_nMotorHersteller      : INT;           // Motorhersteller (0:BRC, 1:Beckhoff)
    I_bHuettenSchr          : BOOL := FALSE;  // Hüttenhölscher Schrauber aktiv
    
    // Aktuelle Istwerte (müssen extern versorgt werden)
    I_fSchraubTiefeIst      : LREAL;         // Aktuelle Schraubtiefe
    I_fDrehmomentIst        : LREAL;         // Aktuelles Drehmoment
    I_fDrehzahlIst          : LREAL;         // Aktuelle Drehzahl
END_VAR

VAR_OUTPUT
    // Statusausgänge
    Q_bBusy                 : BOOL;           // Baustein aktiv
    Q_bDone                 : BOOL;           // Vorgang abgeschlossen
    Q_bError                : BOOL;           // Fehler aufgetreten
    Q_sPosZustand          : STRING := '';    // Aktueller Positionszustand
    Q_bGrundstellungAktiv  : BOOL;           // Grundstellung wird angefahren
    Q_bGrundstellungOk     : BOOL;           // Grundstellung erreicht
    
    // Prozessausgänge
    Q_bSchraubHub          : BOOL;           // Schraubhub aktiv
    Q_bSchrAuswurf         : BOOL;           // Auswurf aktiv
    Q_bSchrHalt            : BOOL;           // Schrauber gestoppt
    Q_nTorque              : INT := 300;      // Aktuelles Drehmoment
    Q_bAxisReset           : BOOL;           // Achsreset angefordert
    Q_nErrorId             : INT;            // Fehler-ID
    Q_bDrehmomentFehler    : BOOL;           // Drehmomentfehler aufgetreten
    
    // Sollwertausgänge für Achse
    Q_fDrehzahlSoll        : LREAL;          // Solldrehzahl für Achse
    Q_fDrehmomentSoll      : LREAL;          // Solldrehmoment für Achse
    
    // Debug und Status
    Q_nStep                : INT;             // Aktueller Schritt
    Q_strStep              : STRING;          // Schrittbeschreibung
    Q_sStatus              : STRING(255);     // Statustext
END_VAR

VAR
    // Interne Variablen für Steuerung
    fSchraubTiefeSoll         : LREAL;          // Soll-Schraubtiefe
    fTiefenToleranz           : LREAL := 0.1;   // Toleranz für Tiefenmessung (mm)
    
    // Drehzahlvariablen
    fMaxSpeed                : LREAL := 400.0; // Maximale Drehzahl (U/min)
    fReducedSpeed            : LREAL := 20.0;  // Reduzierte Drehzahl (U/min)
    
    // Drehmomentvariablen
    fMaxTorque              : LREAL := 2.0;   // Maximales Drehmoment (Nm)
    fTorqueIncrement        : LREAL := 0.2;   // Drehmomenterhöhung (Nm)
    
    // Rampenparameter
    tRampeHoch             : TIME := T#500MS; // Beschleunigungszeit
    fTiefeDrehzahlRed      : LREAL := 2.0;    // Abstand für Drehzahlreduzierung
    
    // Überwachungsvariablen
    fTiefenAenderung       : LREAL;           // Tiefenänderung über 60° Motorwinkel
    nMotorWinkel           : LREAL;           // Aktueller Motorwinkel
    fLetzteTiefe           : LREAL;           // Letzte gemessene Tiefe
    nFehlerCounter         : INT;             // Fehlerzähler
    
    // Timer
    tonRampe               : TON;             // Timer für Rampensteuerung
    tonUeberwachung       : TON;             // Überwachungstimer
    tonStillstand         : TON;             // Stillstandsüberwachung
    
    // Statusinformationen
    nSchraubFall          : INT;             // Aktueller Schraubfall (1-4)
    bSchraubphaseAktiv    : BOOL;            // Schraubphase aktiv
    bDrehmomentErreicht   : BOOL;            // Solldrehmoment erreicht
    bTiefenAenderungOK    : BOOL;            // Tiefenänderung im Toleranzbereich
    
    // Flankenmerker
    rtrigStart            : R_TRIG;          // Flanke für Start
    ftrigQuitt            : F_TRIG;          // Flanke für Quittierung
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Flankenauswertung
rtrigStart(CLK:=I_bTaktStart);
ftrigQuitt(CLK:=I_bQuittFehler);

// Hauptablauf
CASE Q_nStep OF
    
    // Initialisierung
    0: 
        Q_strStep := 'Initialisierung';
        ResetOutputs();
        IF I_bTaktFrg AND NOT I_bGrundstellung AND (I_bTaktStart OR rtrigStart.Q) THEN
            Q_nStep := 10;
            Q_bBusy := TRUE;
        END_IF

    // Start und Prüfung der Grundbedingungen
    10: 
        Q_strStep := 'Grundbedingungen prüfen';
        IF CheckStartConditions() THEN
            // Parameter übernehmen
            fSchraubTiefeSoll := I_stParam.fParam_Sollschraubtiefe;
            Q_fDrehmomentSoll := 1.4; // Startdrehmoment
            Q_nStep := 20;
        END_IF

    // Schraubhub vorfahren
    20: 
        Q_strStep := 'Schraubhub vorfahren';
        Q_bSchraubHub := TRUE;
        tonUeberwachung(IN:=TRUE, PT:=I_stParam.tParam_ZeitdSchraubhubSchr);
        IF I_bZustellZylAusgef THEN
            tonUeberwachung(IN:=FALSE);
            Q_nStep := 30;
        ELSIF tonUeberwachung.Q THEN
            Q_bError := TRUE;
            Q_nErrorId := 80; // Fehler Schrauberstange
            Q_nStep := -1;
        END_IF

    // Drehzahlrampe hochfahren
    30:
        Q_strStep := 'Drehzahl hochrampen';
        StartSpeedRamp();
        IF tonRampe.Q THEN
            Q_nStep := 40;
        END_IF

    // Hauptschraubvorgang
    40:
        Q_strStep := 'Hauptschraubvorgang';
        ExecuteMainScrewing();
        // Prüfen ob Umschalttiefe erreicht
        IF I_fSchraubTiefeIst >= (I_stParam.fParam_Umschalttiefe - fTiefeDrehzahlRed) THEN
            Q_nStep := 50;
        END_IF

    // Drehzahl reduzieren vor Endposition
    50:
        Q_strStep := 'Drehzahl reduzieren';
        ReduceSpeed();
        IF CheckFinalPosition() THEN
            Q_nStep := 60;
        END_IF

    // Drehmomentüberwachung
    60:
        Q_strStep := 'Drehmomentüberwachung';
        MonitorTorque();
        DetermineSchraubfall();
        CASE nSchraubFall OF
            1: HandleCase1();
            2: HandleCase2();
            3: HandleCase3();
            4: HandleCase4();
        END_CASE
        
        // Prüfen ob Vorgang erfolgreich abgeschlossen
        IF CheckFinishConditions() THEN
            Q_nStep := 70;
        END_IF

    // Schraubvorgang beenden
    70:
        Q_strStep := 'Schraubvorgang beenden';
        FinishScrewing();
        Q_nStep := 80;

    // Zurück in Grundstellung
    80:
        Q_strStep := 'Grundstellung anfahren';
        ReturnToHome();
        IF I_bGrdstlgSchrEinh THEN
            Q_bDone := TRUE;
            Q_bBusy := FALSE;
            Q_nStep := 0;
        END_IF

    // Fehlerbehandlung
    -1:
        Q_strStep := 'Fehlerbehandlung';
        HandleError();
        IF ftrigQuitt.Q OR (I_tAutoQuit > T#0MS AND tonStillstand.Q) THEN
            ResetOutputs();
            Q_nStep := 0;
        END_IF
END_CASE

// Timer für automatische Quittierung
IF Q_nStep = -1 AND I_tAutoQuit > T#0MS THEN
    tonStillstand(IN:=TRUE, PT:=I_tAutoQuit);
ELSE
    tonStillstand(IN:=FALSE);
END_IF

// Grundstellung
Q_bGrundstellungOk := I_bGrdstlgSchrEinh AND Q_nStep = 0;]]></ST>
    </Implementation>
    <Folder Name="HandleCase" Id="{4be1da37-ea99-4b98-8b54-94ff45a1b8c9}" />
    <Method Name="CheckFinishConditions" Id="{3046b005-6506-4520-a84d-4ab9f21c5f39}">
      <Declaration><![CDATA[METHOD CheckFinishConditions : BOOL
VAR
    bDepthOK : BOOL;
    bTorqueOK : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Prüfen der Abschlussbedingungen
bDepthOK := (I_fSchraubTiefeIst >= (fSchraubTiefeSoll - I_fTiefentoleranzNeg)) AND 
            (I_fSchraubTiefeIst <= (fSchraubTiefeSoll + I_fTiefentoleranzPos));

bTorqueOK := (I_fDrehmomentIst >= (Q_fDrehmomentSoll * 0.9)) AND 
             (I_fDrehmomentIst <= fMaxTorque);

CheckFinishConditions := bDepthOK AND bTorqueOK;

IF CheckFinishConditions THEN
    Q_sStatus := 'Schraubvorgang erfolgreich abgeschlossen';
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="CheckFinalPosition" Id="{88a7b4f3-2345-4567-89ab-cdef01234567}">
      <Declaration><![CDATA[METHOD CheckFinalPosition : BOOL
VAR
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Prüfen ob Endposition erreicht wurde
CheckFinalPosition := I_fSchraubTiefeIst >= (fSchraubTiefeSoll - I_fTiefentoleranzNeg);

IF CheckFinalPosition THEN
    // Drehzahl auf Anzugsgeschwindigkeit reduzieren
    Q_fDrehzahlSoll := fReducedSpeed;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="CheckStartConditions" Id="{8d278dcd-5458-49ee-8e00-2000debe707c}">
      <Declaration><![CDATA[METHOD CheckStartConditions : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CheckStartConditions := 
        I_bTaktFrg AND
        NOT I_bTaktStop AND
        I_bSchutzbereichOK AND
        NOT Q_bError AND
        I_bGrdstlgSchrEinh;  // Grundstellung muss erreicht sein
        
IF NOT CheckStartConditions THEN
    IF NOT I_bSchutzbereichOK THEN
        Q_sStatus := 'Warte auf Schutzbereich';
    ELSIF NOT I_bGrdstlgSchrEinh THEN
        Q_sStatus := 'Warte auf Grundstellung';
    END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="DetermineSchraubfall" Id="{12345678-9012-3456-7890-123456789012}">
      <Declaration><![CDATA[METHOD DetermineSchraubfall
VAR
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Bestimmung des aktuellen Schraubfalls
IF I_fSchraubTiefeIst < (fSchraubTiefeSoll - 10.0) THEN
    // Fall 4: Keine Schraube (große Tiefenabweichung)
    nSchraubFall := 4;
ELSIF bDrehmomentErreicht AND NOT bTiefenAenderungOK THEN
    // Fall 1: Drehmoment erreicht, aber Tiefe ändert sich noch
    IF I_fSchraubTiefeIst < fSchraubTiefeSoll THEN
        nSchraubFall := 1;
    ELSE
        nSchraubFall := 3; // Positive Toleranz
    END_IF
ELSIF bTiefenAenderungOK AND NOT bDrehmomentErreicht THEN
    // Fall 2: Tiefe erreicht, aber Drehmoment nicht
    nSchraubFall := 2;
ELSE
    // Normalfall
    nSchraubFall := 0;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="ExecuteMainScrewing" Id="{88bda2a7-1900-4ef0-b4c1-bdbfa73cd0e6}">
      <Declaration><![CDATA[METHOD ExecuteMainScrewing : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Hauptschraubvorgang mit Drehmomentüberwachung
bDrehmomentErreicht := I_fDrehmomentIst >= Q_fDrehmomentSoll;

// Tiefenänderung überwachen
fTiefenAenderung := ABS(I_fSchraubTiefeIst - fLetzteTiefe);
bTiefenAenderungOK := fTiefenAenderung < 0.1; // Stillstand wenn < 0.1mm Änderung

// Drehzahl bei vollem Tempo halten
Q_fDrehzahlSoll := fMaxSpeed;

// Speichern für nächsten Zyklus
fLetzteTiefe := I_fSchraubTiefeIst;

// Überwachung auf maximales Drehmoment
IF I_fDrehmomentIst >= fMaxTorque THEN
    Q_bError := TRUE;
    Q_nErrorId := 65; // Drehmoment überschritten
    Q_nStep := -1;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="FinishScrewing" Id="{84794bf9-0c74-4a09-a58b-c72d8f9dd084}">
      <Declaration><![CDATA[METHOD FinishScrewing
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Schraubvorgang beenden
Q_fDrehzahlSoll := 0.0;
Q_bSchraubHub := FALSE;

// Warten bis Stillstand
tonStillstand(IN:=TRUE, PT:=T#100MS);
IF tonStillstand.Q THEN
    tonStillstand(IN:=FALSE);
    Q_sStatus := 'Schraubvorgang beendet';
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="HandleCase1" Id="{475dcb84-2c4e-4a82-b9cc-8d2156826993}" FolderPath="HandleCase\">
      <Declaration><![CDATA[METHOD HandleCase1 : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Fall 1: Negative Materialtoleranzen & Drehmoment erreicht
IF bDrehmomentErreicht AND NOT bTiefenAenderungOK THEN
    IF Q_fDrehmomentSoll < fMaxTorque THEN
        Q_fDrehmomentSoll := Q_fDrehmomentSoll + fTorqueIncrement;
        Q_fDrehzahlSoll := fReducedSpeed;
        Q_sStatus := 'Erhöhe Drehmoment';
    ELSE
        // Maximales Drehmoment erreicht
        Q_bError := TRUE;
        Q_nErrorId := 65;
        Q_nStep := -1;
    END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="HandleCase2" Id="{5e2e746d-7d7b-40f0-a003-22f221964ebd}" FolderPath="HandleCase\">
      <Declaration><![CDATA[METHOD HandleCase2 : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Fall 2: Negative Materialtoleranzen & Solltiefe erreicht
IF bTiefenAenderungOK AND NOT bDrehmomentErreicht THEN
    IF I_fDrehmomentIst < (Q_fDrehmomentSoll * 0.5) THEN
        // Drehmoment viel zu niedrig - Fehler
        Q_bError := TRUE;
        Q_nErrorId := 2;
        Q_sStatus := 'Drehmoment nicht erreicht';
        Q_nStep := -1;
    ELSE
        // Leicht reduziertes Drehmoment akzeptabel
        Q_fDrehzahlSoll := fReducedSpeed;
    END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="HandleCase3" Id="{c6f30bd8-aea3-417a-b574-c87f9c5aed9c}" FolderPath="HandleCase\">
      <Declaration><![CDATA[METHOD HandleCase3 : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Fall 3: Positive Materialtoleranzen
IF bDrehmomentErreicht AND NOT bTiefenAenderungOK THEN
    IF Q_fDrehmomentSoll < fMaxTorque THEN
        Q_fDrehmomentSoll := Q_fDrehmomentSoll + fTorqueIncrement;
        Q_fDrehzahlSoll := fReducedSpeed;
        Q_sStatus := 'Positive Toleranz - Erhöhe Drehmoment';
    ELSE
        // Prüfen ob Tiefe trotzdem OK
        IF I_fSchraubTiefeIst >= (fSchraubTiefeSoll - I_fTiefentoleranzNeg) THEN
            // Akzeptabel
            Q_nStep := 70;
        ELSE
            Q_bError := TRUE;
            Q_nErrorId := 60; // Solltiefe nicht erreicht
            Q_nStep := -1;
        END_IF
    END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="HandleCase4" Id="{65bea258-f093-4ee6-94fa-c98c0ca7a870}" FolderPath="HandleCase\">
      <Declaration><![CDATA[METHOD HandleCase4 : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Fall 4: Keine Schraube
IF I_fSchraubTiefeIst < (fSchraubTiefeSoll - 10.0) THEN
    nFehlerCounter := nFehlerCounter + 1;
    Q_sStatus := CONCAT('Keine Schraube erkannt - Versuch ', INT_TO_STRING(nFehlerCounter));
    
    IF nFehlerCounter >= 2 THEN
        Q_bError := TRUE;
        Q_nErrorId := 40; // Schraube fehlt
        Q_sStatus := 'Bitte Schraubsystem prüfen - Schraube fehlt';
        Q_nStep := -1;
    ELSE
        // Nochmal versuchen
        Q_nStep := 80; // Zurück zur Grundstellung
    END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="HandleError" Id="{6864c0eb-0bd4-4bff-9cf1-9bbb9cd5e6f9}">
      <Declaration><![CDATA[METHOD HandleError : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Fehlerbehandlung
Q_bError := TRUE;
Q_bSchraubHub := FALSE;
Q_fDrehzahlSoll := 0.0;
Q_bSchrHalt := TRUE;

CASE Q_nErrorId OF
    2: // Drehmoment nicht erreicht
        Q_sPosZustand := 'Fehler: Drehmoment nicht erreicht';
        Q_bDrehmomentFehler := TRUE;
        
    40: // Schraube fehlt
        Q_sPosZustand := 'Fehler: Schraube fehlt';
        
    60: // Solltiefe nicht erreicht
        Q_sPosZustand := 'Fehler: Solltiefe nicht erreicht';
        
    61: // Solltiefe überschritten
        Q_sPosZustand := 'Fehler: Solltiefe überschritten';
        
    65: // Drehmoment überschritten
        Q_sPosZustand := 'Fehler: Drehmoment überschritten';
        Q_bDrehmomentFehler := TRUE;
        
    80: // Fehler Schrauberstange
        Q_sPosZustand := 'Fehler: Schrauberstange/Zustellzylinder';
        
    ELSE
        Q_sPosZustand := CONCAT('Fehler: Code ', INT_TO_STRING(Q_nErrorId));
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="MonitorTorque" Id="{9380e9d3-4b47-4190-9a1a-a805ca516823}">
      <Declaration><![CDATA[METHOD MonitorTorque 
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Drehmoment überwachen
fTiefenAenderung := ABS(I_fSchraubTiefeIst - fLetzteTiefe);

// Überwachung des Drehmoments
IF I_fDrehmomentIst >= fMaxTorque THEN
    Q_bError := TRUE;
    Q_nErrorId := 65; // Drehmoment zu hoch
    Q_nStep := -1;
ELSIF I_fSchraubTiefeIst >= fSchraubTiefeSoll AND 
      I_fDrehmomentIst < (Q_fDrehmomentSoll * 0.5) THEN
    // Solltiefe erreicht aber Drehmoment viel zu niedrig
    Q_bError := TRUE;
    Q_nErrorId := 2; // Drehmoment zu niedrig
    Q_nStep := -1;
END_IF

// Überwachung auf Überschreitung der Solltiefe
IF I_fSchraubTiefeIst > (fSchraubTiefeSoll + I_fTiefentoleranzPos + 2.0) THEN
    Q_bError := TRUE;
    Q_nErrorId := 61; // Solltiefe überschritten
    Q_nStep := -1;
END_IF

fLetzteTiefe := I_fSchraubTiefeIst;]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReduceSpeed" Id="{dcfc2fa2-cc5e-4146-b3e8-0f9b5d703f58}">
      <Declaration><![CDATA[METHOD ReduceSpeed
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Geschwindigkeit auf Anzugsgeschwindigkeit reduzieren
IF I_fSchraubTiefeIst >= (fSchraubTiefeSoll - fTiefeDrehzahlRed) THEN
    Q_fDrehzahlSoll := fReducedSpeed;
    Q_sStatus := 'Reduziere Drehzahl für Endposition';
ELSE
    Q_fDrehzahlSoll := fMaxSpeed;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="ResetOutputs" Id="{e5c8e389-aca5-4b19-9cec-fc96d6ecc087}">
      <Declaration><![CDATA[METHOD ResetOutputs : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Reset aller Ausgänge
Q_bBusy := FALSE;
Q_bDone := FALSE;
Q_bError := FALSE;
Q_bSchraubHub := FALSE;
Q_bSchrAuswurf := FALSE;
Q_bSchrHalt := FALSE;
Q_bDrehmomentFehler := FALSE;
Q_bAxisReset := FALSE;
Q_fDrehzahlSoll := 0.0;
Q_fDrehmomentSoll := 1.4;
Q_nErrorId := 0;
Q_nTorque := 0;
Q_sPosZustand := '';
Q_sStatus := 'Bereit';

// Reset interner Variablen
bDrehmomentErreicht := FALSE;
bTiefenAenderungOK := FALSE;
nFehlerCounter := 0;
nSchraubFall := 0;
fLetzteTiefe := 0.0;
fTiefenAenderung := 0.0;

// Timer zurücksetzen
tonRampe(IN:=FALSE);
tonUeberwachung(IN:=FALSE);
tonStillstand(IN:=FALSE);]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReturnToHome" Id="{15f7da24-787c-432b-9ab5-17a334663610}">
      <Declaration><![CDATA[METHOD ReturnToHome
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Zurück in Grundstellung
Q_bSchraubHub := FALSE;
Q_bSchrAuswurf := FALSE;
Q_fDrehzahlSoll := 0.0;
Q_bGrundstellungAktiv := TRUE;

// Warten auf Grundstellung
IF I_bGrdstlgSchrEinh THEN
    Q_bGrundstellungAktiv := FALSE;
    Q_sStatus := 'Grundstellung erreicht';
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="StartSpeedRamp" Id="{88c184e8-517a-4406-ae44-21837f785c76}">
      <Declaration><![CDATA[METHOD StartSpeedRamp : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Drehzahlrampe starten
tonRampe(IN:=TRUE, PT:=tRampeHoch);

// Lineare Rampe von 0 auf Maximaldrehzahl
IF tonRampe.ET < tRampeHoch THEN
    Q_fDrehzahlSoll := fMaxSpeed * TIME_TO_REAL(tonRampe.ET) / TIME_TO_REAL(tRampeHoch);
ELSE
    Q_fDrehzahlSoll := fMaxSpeed;
END_IF

StartSpeedRamp := tonRampe.Q;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Schrauber_PnP_Neu">
      <LineId Id="95" Count="110" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_Neu.CheckFinishConditions">
      <LineId Id="9" Count="11" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_Neu.CheckFinalPosition">
      <LineId Id="1" Count="6" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_Neu.CheckStartConditions">
      <LineId Id="6" Count="13" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_Neu.DetermineSchraubfall">
      <LineId Id="1" Count="16" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_Neu.ExecuteMainScrewing">
      <LineId Id="6" Count="17" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_Neu.FinishScrewing">
      <LineId Id="6" Count="9" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_Neu.HandleCase1">
      <LineId Id="6" Count="12" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_Neu.HandleCase2">
      <LineId Id="6" Count="12" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_Neu.HandleCase3">
      <LineId Id="6" Count="17" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_Neu.HandleCase4">
      <LineId Id="6" Count="13" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_Neu.HandleError">
      <LineId Id="6" Count="30" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_Neu.MonitorTorque">
      <LineId Id="10" Count="22" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_Neu.ReduceSpeed">
      <LineId Id="7" Count="6" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_Neu.ResetOutputs">
      <LineId Id="6" Count="27" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_Neu.ReturnToHome">
      <LineId Id="6" Count="10" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Schrauber_PnP_Neu.StartSpeedRamp">
      <LineId Id="6" Count="10" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>